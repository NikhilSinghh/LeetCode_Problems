/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    vector<int> nextLargerNodes(ListNode* head) {
    vector<int> ans;
     for(ListNode* i=head ; i!=NULL; i=i->next)
     {
         int large=i->val;
         for(ListNode* j=i; j!=NULL; j=j->next)
         {
             if(j->val > large)
             {
                 large = j->val;
                 break;
             }
         }
         if(i->val == large)
         ans.push_back(0);
         else 
         ans.push_back(large);
     }
     return ans;
    }
};



//////////////////////////////////////////////////////////////////////Another Aprroach///////////////////

class Solution {
public:
    vector<int> nextLargerNodes(ListNode* head) {
         vector<int> arr;
     ListNode* temp=head;
     int i=0,c=0,l;
   while(temp){
         arr.push_back(temp->val);
         c=c+1;
         temp=temp->next;
   }
     
     for(int k=0; k<c; k++ )
    {   l = arr[k];
         for(int j=k; j<c; j++ )
          {
              if(arr[j]>l)  
                {
                    l=arr[j];
                    break;
                }
          }
        if(arr[k]==l)
           arr[k]=0;
        else arr[k]=l;
         
    }
        return arr;
    }
};

