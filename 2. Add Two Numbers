/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution
{
  public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* res = nullptr;
        ListNode* curr = nullptr;
        // both list had value and add equal length
        while (l1 != nullptr || l2 != nullptr) {
            if (res) {
                if (curr->next == nullptr)
                    curr->next = new ListNode(0);
                curr = curr->next;
            } else { // first time
                res = new ListNode(0);
                curr = res;
            }
            if (l1) {
                curr->val += l1->val;
                l1 = l1->next;
            }
            if (l2) {
                curr->val += l2->val;
                l2 = l2->next;
            }
            if (curr->val > 9) {
                if (curr->val / 10 > 0)
                    curr->next = new ListNode(curr->val / 10);
                curr->val = curr->val % 10;
            }
        }
        return res;
    }
};
